// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Digital infra for vaccination certificates",
    "title": "Divoc",
    "version": "1.0.0"
  },
  "host": "divoc.xiv.in",
  "basePath": "/divoc/api",
  "paths": {
    "/v1/authorize": {
      "post": {
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "login"
        ],
        "summary": "Establish token",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "206": {
            "description": "Need otp"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/bulkCertify": {
      "post": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "description": "certify all the data in uploaded csv",
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "certification"
        ],
        "summary": "Upload certification csv for bulk ingestion",
        "operationId": "bulkCertify",
        "parameters": [
          {
            "type": "file",
            "description": "Certification data in the form of csv",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/certificate": {
      "put": {
        "description": "Update existing certificate if all checks are passed",
        "tags": [
          "certification"
        ],
        "summary": "Update existing certificate request",
        "operationId": "updateCertificate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CertificationRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Update not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/certificate/revoked": {
      "post": {
        "security": [],
        "tags": [
          "certificateRevoked"
        ],
        "summary": "Check if given certificate is revoked",
        "operationId": "certificateRevoked",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "certificate not found in revocation list"
          }
        }
      }
    },
    "/v1/certificates": {
      "get": {
        "security": [
          {
            "hasRole": [
              "recipient"
            ]
          }
        ],
        "summary": "Get certificate json",
        "operationId": "getCertificate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/certificates/{certificateId}": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "tags": [
          "certification"
        ],
        "summary": "Get certificate json for given certificateId",
        "operationId": "getCertificateByCertificateId",
        "parameters": [
          {
            "type": "string",
            "description": "Id of certificate",
            "name": "certificateId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "certificate for given certificateId not found"
          }
        }
      }
    },
    "/v1/certify": {
      "post": {
        "description": "Certification happens asynchronously, this requires vaccinator authorization and vaccinator should be trained for the vaccination that is being certified.",
        "tags": [
          "certification"
        ],
        "summary": "Certify the one or more vaccination",
        "operationId": "certify",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CertificationRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/certify/uploads": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "tags": [
          "certification"
        ],
        "summary": "Get all file uploads for certification for given facility admin",
        "operationId": "getCertifyUploads",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/certify/uploads/{uploadId}/errors": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "tags": [
          "certification"
        ],
        "summary": "Get all the error rows associated with given uploadId",
        "operationId": "getCertifyUploadErrors",
        "parameters": [
          {
            "type": "integer",
            "description": "Id of uploaded csv file",
            "name": "uploadId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden for user"
          },
          "404": {
            "description": "certify upload for given uploadID not found"
          }
        }
      }
    },
    "/v1/divoc/configuration": {
      "get": {
        "tags": [
          "configuration"
        ],
        "summary": "Get Meta information about the application flow",
        "operationId": "getConfiguration",
        "parameters": [
          {
            "type": "string",
            "name": "lastKnownVersion",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApplicationConfiguration"
            }
          }
        }
      }
    },
    "/v1/events": {
      "post": {
        "security": [],
        "summary": "Send events for monitoring / tracking purpose.",
        "operationId": "events",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Event"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/identity/verify": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "identity"
        ],
        "summary": "Validate identity if the person",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/IdentityVerificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "206": {
            "description": "Need OTP"
          }
        }
      }
    },
    "/v1/ping": {
      "get": {
        "security": [],
        "description": "This operation shows how to override the global security defined above, as we want to open it up for all users.",
        "summary": "Server heartbeat operation",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/preEnrollments": {
      "get": {
        "tags": [
          "vaccination"
        ],
        "summary": "Get all pre enrollments applicable to assigned facility",
        "operationId": "getPreEnrollmentsForFacility",
        "parameters": [
          {
            "type": "number",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "number",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "../registry/Enrollment.json#/definitions/Enrollment"
              }
            }
          }
        }
      }
    },
    "/v1/preEnrollments/{preEnrollmentCode}": {
      "get": {
        "description": "Get pre enrollment data from api for vaccination",
        "tags": [
          "vaccination"
        ],
        "summary": "Get pre enrollment information",
        "operationId": "getPreEnrollment",
        "parameters": [
          {
            "type": "string",
            "name": "preEnrollmentCode",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "number",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../registry/Enrollment.json#/definitions/Enrollment"
            }
          }
        }
      }
    },
    "/v1/programs/current": {
      "get": {
        "tags": [
          "configuration"
        ],
        "summary": "Get active vaccination programs",
        "operationId": "getCurrentPrograms",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Program"
              }
            }
          }
        }
      }
    },
    "/v1/report-side-effects": {
      "post": {
        "security": [
          {
            "hasRole": [
              "recipient"
            ]
          }
        ],
        "tags": [
          "reportSideEffects"
        ],
        "summary": "Create reported side effects",
        "operationId": "createReportedSideEffects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "certificateId": {
                  "type": "string"
                },
                "sideEffectsResponse": {
                  "type": "array",
                  "items": {
                    "$ref": "../registry/RecipientSideEffects.json#/definitions/SideEffectsResponse"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/sideEffects": {
      "get": {
        "security": [],
        "tags": [
          "sideEffects"
        ],
        "summary": "Get Side Effects Metadata",
        "operationId": "getSideEffectsMetadata",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/test/bulkCertify": {
      "post": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "description": "certify all the data in uploaded csv",
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "certification"
        ],
        "summary": "Upload test certification csv for bulk ingestion",
        "operationId": "testBulkCertify",
        "parameters": [
          {
            "type": "file",
            "description": "Certification data in the form of csv",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/test/certify": {
      "post": {
        "description": "Certification happens asynchronously, this requires vaccinator authorization.",
        "tags": [
          "certification"
        ],
        "summary": "Certify the one or more vaccination",
        "operationId": "testCertify",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCertificationRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/test/certify/uploads": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "tags": [
          "certification"
        ],
        "summary": "Get all file uploads for test certification for given facility admin",
        "operationId": "getTestCertifyUploads",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/test/certify/uploads/{uploadId}/errors": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "tags": [
          "certification"
        ],
        "summary": "Get all the error rows associated with given uploadId",
        "operationId": "getTestCertifyUploadErrors",
        "parameters": [
          {
            "type": "integer",
            "description": "Id of uploaded csv file",
            "name": "uploadId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden for user"
          },
          "404": {
            "description": "test certify upload for given uploadID not found"
          }
        }
      }
    },
    "/v1/users/me": {
      "get": {
        "tags": [
          "vaccination"
        ],
        "summary": "Get User information",
        "operationId": "getLoggedInUserInfo",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          }
        }
      }
    },
    "/v1/vaccinators": {
      "get": {
        "tags": [
          "configuration"
        ],
        "summary": "Get active vaccinators mapped for the facility",
        "operationId": "getVaccinators",
        "parameters": [
          {
            "type": "number",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "number",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "../registry/Vaccinator.json#/definitions/Vaccinator"
              }
            }
          }
        }
      }
    },
    "/v3/certificate": {
      "put": {
        "description": "Update existing certificate if all checks are passed",
        "tags": [
          "certification"
        ],
        "summary": "Update existing certificate request",
        "operationId": "updateCertificateV3",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CertificationRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Update not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v3/certify": {
      "post": {
        "description": "Certification happens asynchronously, this requires vaccinator authorization and vaccinator should be trained for the vaccination that is being certified. The payload for this API is compliant with DDCC core data set prescribed by WHO",
        "tags": [
          "certification"
        ],
        "summary": "Certify the one or more vaccination",
        "operationId": "certifyV3",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CertificationRequestV2"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApplicationConfiguration": {
      "type": "object",
      "properties": {
        "navigation": {
          "type": "object"
        },
        "styles": {
          "type": "object"
        },
        "validation": {
          "type": "object"
        }
      }
    },
    "CertificationRequest": {
      "type": "object",
      "required": [
        "preEnrollmentCode",
        "recipient",
        "vaccination",
        "vaccinator",
        "facility"
      ],
      "properties": {
        "comorbidities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enrollmentType": {
          "type": "string",
          "minLength": 1
        },
        "facility": {
          "type": "object",
          "required": [
            "name",
            "address"
          ],
          "properties": {
            "address": {
              "type": "object",
              "required": [
                "addressLine1",
                "district",
                "state",
                "pincode"
              ],
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "country": {
                  "type": "string",
                  "minLength": 2
                },
                "district": {
                  "type": "string",
                  "minLength": 1
                },
                "pincode": {
                  "type": "string",
                  "minLength": 1
                },
                "state": {
                  "type": "string",
                  "minLength": 1
                }
              }
            },
            "name": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "meta": {
          "type": "object"
        },
        "preEnrollmentCode": {
          "type": "string"
        },
        "programId": {
          "type": "string",
          "minLength": 1
        },
        "recipient": {
          "type": "object",
          "required": [
            "name",
            "gender",
            "nationality",
            "identity",
            "contact",
            "address",
            "enrollmentType",
            "programId"
          ],
          "properties": {
            "address": {
              "type": "object",
              "required": [
                "addressLine1",
                "district",
                "state",
                "pincode"
              ],
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "country": {
                  "type": "string",
                  "minLength": 2
                },
                "district": {
                  "type": "string",
                  "minLength": 1
                },
                "pincode": {
                  "type": "string"
                },
                "state": {
                  "type": "string",
                  "minLength": 1
                }
              }
            },
            "age": {
              "type": "string",
              "minLength": 1
            },
            "contact": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              }
            },
            "dob": {
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "gender": {
              "type": "string",
              "minLength": 1
            },
            "identity": {
              "type": "string",
              "minLength": 1
            },
            "name": {
              "type": "string",
              "minLength": 1
            },
            "nationality": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "vaccination": {
          "type": "object",
          "required": [
            "name",
            "manufacturer",
            "date",
            "effectiveStart",
            "effectiveUntil",
            "dose",
            "totalDoses"
          ],
          "properties": {
            "batch": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "date"
            },
            "dose": {
              "description": "Dose number for example 1 for first dose of 2 doses",
              "type": "number",
              "minimum": 1,
              "example": 1
            },
            "effectiveStart": {
              "type": "string",
              "format": "date"
            },
            "effectiveUntil": {
              "type": "string",
              "format": "date"
            },
            "manufacturer": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "totalDoses": {
              "description": "Total number of doses required for this vaccination.",
              "type": "number",
              "minimum": 1,
              "example": 2
            }
          }
        },
        "vaccinator": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            }
          }
        }
      }
    },
    "CertificationRequestV2": {
      "type": "object",
      "required": [
        "preEnrollmentCode",
        "recipient",
        "vaccination",
        "facility"
      ],
      "properties": {
        "comorbidities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enrollmentType": {
          "type": "string",
          "minLength": 1
        },
        "facility": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "address": {
              "type": "object",
              "required": [
                "addressLine1",
                "district",
                "state",
                "pincode"
              ],
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "country": {
                  "type": "string",
                  "minLength": 2
                },
                "district": {
                  "type": "string",
                  "minLength": 1
                },
                "pincode": {
                  "type": "string",
                  "minLength": 1
                },
                "state": {
                  "type": "string",
                  "minLength": 1
                }
              }
            },
            "name": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "meta": {
          "type": "object"
        },
        "preEnrollmentCode": {
          "type": "string"
        },
        "programId": {
          "type": "string",
          "minLength": 1
        },
        "recipient": {
          "type": "object",
          "required": [
            "name",
            "nationality",
            "identity",
            "contact"
          ],
          "properties": {
            "address": {
              "type": "object",
              "required": [
                "addressLine1",
                "district",
                "state",
                "pincode"
              ],
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "country": {
                  "type": "string",
                  "minLength": 2
                },
                "district": {
                  "type": "string",
                  "minLength": 1
                },
                "pincode": {
                  "type": "string"
                },
                "state": {
                  "type": "string",
                  "minLength": 1
                }
              }
            },
            "age": {
              "type": "string",
              "minLength": 1
            },
            "contact": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              }
            },
            "dob": {
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "gender": {
              "type": "string",
              "minLength": 1
            },
            "identity": {
              "type": "string",
              "minLength": 1
            },
            "name": {
              "type": "string",
              "minLength": 1
            },
            "nationality": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "vaccination": {
          "type": "object",
          "required": [
            "name",
            "manufacturer",
            "date",
            "effectiveStart",
            "effectiveUntil",
            "dose",
            "totalDoses"
          ],
          "properties": {
            "batch": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "date"
            },
            "dose": {
              "description": "Dose number for example 1 for first dose of 2 doses",
              "type": "number",
              "minimum": 1,
              "example": 1
            },
            "effectiveStart": {
              "type": "string",
              "format": "date"
            },
            "effectiveUntil": {
              "type": "string",
              "format": "date"
            },
            "manufacturer": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "totalDoses": {
              "description": "Total number of doses required for this vaccination.",
              "type": "number",
              "minimum": 1,
              "example": 2
            }
          }
        },
        "vaccinator": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            }
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "extra": {
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "IdentityVerificationRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "properties": {
        "mobile": {
          "type": "string",
          "format": "string"
        },
        "token2fa": {
          "type": "string"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "Program": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "logoURL": {
          "type": "string"
        },
        "medicines": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "medicine",
            "properties": {
              "doseIntervals": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "max": {
                      "type": "integer"
                    },
                    "min": {
                      "type": "integer"
                    }
                  }
                }
              },
              "effectiveUntil": {
                "description": "Number of days the vaccination is effective after last dose",
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "price": {
                "type": "number"
              },
              "provider": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "Active",
                  "Inactive",
                  "Blocked"
                ]
              },
              "vaccinationMode": {
                "type": "string",
                "enum": [
                  "muscular injection",
                  "oral",
                  "nasal"
                ]
              }
            }
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TestCertificationRequest": {
      "type": "object",
      "required": [
        "preEnrollmentCode",
        "recipient",
        "testDetails",
        "facility"
      ],
      "properties": {
        "facility": {
          "type": "object",
          "required": [
            "name",
            "address"
          ],
          "properties": {
            "address": {
              "type": "object",
              "required": [
                "addressLine1",
                "district",
                "state",
                "pincode"
              ],
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "country": {
                  "type": "string",
                  "minLength": 2
                },
                "district": {
                  "type": "string",
                  "minLength": 1
                },
                "pincode": {
                  "type": "string",
                  "minLength": 1
                },
                "state": {
                  "type": "string",
                  "minLength": 1
                }
              }
            },
            "name": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "meta": {
          "type": "object"
        },
        "preEnrollmentCode": {
          "type": "string"
        },
        "programId": {
          "type": "string",
          "minLength": 1
        },
        "recipient": {
          "type": "object",
          "required": [
            "name",
            "gender",
            "dob",
            "identity",
            "contact"
          ],
          "properties": {
            "address": {
              "type": "object",
              "required": [
                "addressLine1",
                "district",
                "state",
                "pincode"
              ],
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "country": {
                  "type": "string",
                  "minLength": 2
                },
                "district": {
                  "type": "string",
                  "minLength": 1
                },
                "pincode": {
                  "type": "string"
                },
                "state": {
                  "type": "string",
                  "minLength": 1
                }
              }
            },
            "contact": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              }
            },
            "dob": {
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "gender": {
              "type": "string",
              "minLength": 1
            },
            "identity": {
              "type": "string",
              "minLength": 1
            },
            "name": {
              "type": "string",
              "minLength": 1
            },
            "nationality": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "testDetails": {
          "type": "object",
          "required": [
            "testType",
            "disease",
            "sampleCollectionTimestamp",
            "resultTimestamp",
            "result"
          ],
          "properties": {
            "batch": {
              "type": "string"
            },
            "disease": {
              "type": "string"
            },
            "manufacturer": {
              "type": "string"
            },
            "result": {
              "type": "string",
              "enum": [
                "Positive",
                "Negative",
                "Inconclusive",
                "Void"
              ]
            },
            "resultTimestamp": {
              "type": "string",
              "format": "date-time"
            },
            "sampleCollectionTimestamp": {
              "type": "string",
              "format": "date-time"
            },
            "sampleOrigin": {
              "type": "string"
            },
            "testName": {
              "type": "string"
            },
            "testType": {
              "type": "string"
            }
          }
        },
        "verifier": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            }
          }
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "hasRole": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://divoc.xiv.in/keycloak/auth/realms/divoc/protocol/openid-connect/auth",
      "tokenUrl": "https://divoc.xiv.in/keycloak/auth/realms/divoc/protocol/openid-connect/token",
      "scopes": {
        "admin": "scope of super admin",
        "facility-admin": "scope of facility admin",
        "facility-staff": "scope of facility staff"
      }
    }
  },
  "security": [
    {
      "hasRole": [
        "facility-staff"
      ]
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Digital infra for vaccination certificates",
    "title": "Divoc",
    "version": "1.0.0"
  },
  "host": "divoc.xiv.in",
  "basePath": "/divoc/api",
  "paths": {
    "/v1/authorize": {
      "post": {
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "login"
        ],
        "summary": "Establish token",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "206": {
            "description": "Need otp"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/bulkCertify": {
      "post": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "description": "certify all the data in uploaded csv",
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "certification"
        ],
        "summary": "Upload certification csv for bulk ingestion",
        "operationId": "bulkCertify",
        "parameters": [
          {
            "type": "file",
            "description": "Certification data in the form of csv",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/certificate": {
      "put": {
        "description": "Update existing certificate if all checks are passed",
        "tags": [
          "certification"
        ],
        "summary": "Update existing certificate request",
        "operationId": "updateCertificate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CertificationRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Update not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/certificate/revoked": {
      "post": {
        "security": [],
        "tags": [
          "certificateRevoked"
        ],
        "summary": "Check if given certificate is revoked",
        "operationId": "certificateRevoked",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "certificate not found in revocation list"
          }
        }
      }
    },
    "/v1/certificates": {
      "get": {
        "security": [
          {
            "hasRole": [
              "recipient"
            ]
          }
        ],
        "summary": "Get certificate json",
        "operationId": "getCertificate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/certificates/{certificateId}": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "tags": [
          "certification"
        ],
        "summary": "Get certificate json for given certificateId",
        "operationId": "getCertificateByCertificateId",
        "parameters": [
          {
            "type": "string",
            "description": "Id of certificate",
            "name": "certificateId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "certificate for given certificateId not found"
          }
        }
      }
    },
    "/v1/certify": {
      "post": {
        "description": "Certification happens asynchronously, this requires vaccinator authorization and vaccinator should be trained for the vaccination that is being certified.",
        "tags": [
          "certification"
        ],
        "summary": "Certify the one or more vaccination",
        "operationId": "certify",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CertificationRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/certify/uploads": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "tags": [
          "certification"
        ],
        "summary": "Get all file uploads for certification for given facility admin",
        "operationId": "getCertifyUploads",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/certify/uploads/{uploadId}/errors": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "tags": [
          "certification"
        ],
        "summary": "Get all the error rows associated with given uploadId",
        "operationId": "getCertifyUploadErrors",
        "parameters": [
          {
            "type": "integer",
            "description": "Id of uploaded csv file",
            "name": "uploadId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden for user"
          },
          "404": {
            "description": "certify upload for given uploadID not found"
          }
        }
      }
    },
    "/v1/divoc/configuration": {
      "get": {
        "tags": [
          "configuration"
        ],
        "summary": "Get Meta information about the application flow",
        "operationId": "getConfiguration",
        "parameters": [
          {
            "type": "string",
            "name": "lastKnownVersion",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApplicationConfiguration"
            }
          }
        }
      }
    },
    "/v1/events": {
      "post": {
        "security": [],
        "summary": "Send events for monitoring / tracking purpose.",
        "operationId": "events",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Event"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/identity/verify": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "identity"
        ],
        "summary": "Validate identity if the person",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/IdentityVerificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "206": {
            "description": "Need OTP"
          }
        }
      }
    },
    "/v1/ping": {
      "get": {
        "security": [],
        "description": "This operation shows how to override the global security defined above, as we want to open it up for all users.",
        "summary": "Server heartbeat operation",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/preEnrollments": {
      "get": {
        "tags": [
          "vaccination"
        ],
        "summary": "Get all pre enrollments applicable to assigned facility",
        "operationId": "getPreEnrollmentsForFacility",
        "parameters": [
          {
            "type": "number",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "number",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "name": "date",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/enrollment"
              }
            }
          }
        }
      }
    },
    "/v1/preEnrollments/{preEnrollmentCode}": {
      "get": {
        "description": "Get pre enrollment data from api for vaccination",
        "tags": [
          "vaccination"
        ],
        "summary": "Get pre enrollment information",
        "operationId": "getPreEnrollment",
        "parameters": [
          {
            "type": "string",
            "name": "preEnrollmentCode",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "number",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/enrollment"
            }
          }
        }
      }
    },
    "/v1/programs/current": {
      "get": {
        "tags": [
          "configuration"
        ],
        "summary": "Get active vaccination programs",
        "operationId": "getCurrentPrograms",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Program"
              }
            }
          }
        }
      }
    },
    "/v1/report-side-effects": {
      "post": {
        "security": [
          {
            "hasRole": [
              "recipient"
            ]
          }
        ],
        "tags": [
          "reportSideEffects"
        ],
        "summary": "Create reported side effects",
        "operationId": "createReportedSideEffects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "certificateId": {
                  "type": "string"
                },
                "sideEffectsResponse": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/sideEffectsResponse"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/sideEffects": {
      "get": {
        "security": [],
        "tags": [
          "sideEffects"
        ],
        "summary": "Get Side Effects Metadata",
        "operationId": "getSideEffectsMetadata",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/test/bulkCertify": {
      "post": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "description": "certify all the data in uploaded csv",
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "certification"
        ],
        "summary": "Upload test certification csv for bulk ingestion",
        "operationId": "testBulkCertify",
        "parameters": [
          {
            "type": "file",
            "description": "Certification data in the form of csv",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/test/certify": {
      "post": {
        "description": "Certification happens asynchronously, this requires vaccinator authorization.",
        "tags": [
          "certification"
        ],
        "summary": "Certify the one or more vaccination",
        "operationId": "testCertify",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestCertificationRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/test/certify/uploads": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "tags": [
          "certification"
        ],
        "summary": "Get all file uploads for test certification for given facility admin",
        "operationId": "getTestCertifyUploads",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/test/certify/uploads/{uploadId}/errors": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "tags": [
          "certification"
        ],
        "summary": "Get all the error rows associated with given uploadId",
        "operationId": "getTestCertifyUploadErrors",
        "parameters": [
          {
            "type": "integer",
            "description": "Id of uploaded csv file",
            "name": "uploadId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden for user"
          },
          "404": {
            "description": "test certify upload for given uploadID not found"
          }
        }
      }
    },
    "/v1/users/me": {
      "get": {
        "tags": [
          "vaccination"
        ],
        "summary": "Get User information",
        "operationId": "getLoggedInUserInfo",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          }
        }
      }
    },
    "/v1/vaccinators": {
      "get": {
        "tags": [
          "configuration"
        ],
        "summary": "Get active vaccinators mapped for the facility",
        "operationId": "getVaccinators",
        "parameters": [
          {
            "type": "number",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "number",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/vaccinator"
              }
            }
          }
        }
      }
    },
    "/v3/certificate": {
      "put": {
        "description": "Update existing certificate if all checks are passed",
        "tags": [
          "certification"
        ],
        "summary": "Update existing certificate request",
        "operationId": "updateCertificateV3",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CertificationRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Update not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v3/certify": {
      "post": {
        "description": "Certification happens asynchronously, this requires vaccinator authorization and vaccinator should be trained for the vaccination that is being certified. The payload for this API is compliant with DDCC core data set prescribed by WHO",
        "tags": [
          "certification"
        ],
        "summary": "Certify the one or more vaccination",
        "operationId": "certifyV3",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CertificationRequestV2"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApplicationConfiguration": {
      "type": "object",
      "properties": {
        "navigation": {
          "type": "object"
        },
        "styles": {
          "type": "object"
        },
        "validation": {
          "type": "object"
        }
      }
    },
    "CertificationRequest": {
      "type": "object",
      "required": [
        "preEnrollmentCode",
        "recipient",
        "vaccination",
        "vaccinator",
        "facility"
      ],
      "properties": {
        "comorbidities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enrollmentType": {
          "type": "string",
          "minLength": 1
        },
        "facility": {
          "type": "object",
          "required": [
            "name",
            "address"
          ],
          "properties": {
            "address": {
              "type": "object",
              "required": [
                "addressLine1",
                "district",
                "state",
                "pincode"
              ],
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "country": {
                  "type": "string",
                  "minLength": 2
                },
                "district": {
                  "type": "string",
                  "minLength": 1
                },
                "pincode": {
                  "type": "string",
                  "minLength": 1
                },
                "state": {
                  "type": "string",
                  "minLength": 1
                }
              }
            },
            "name": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "meta": {
          "type": "object"
        },
        "preEnrollmentCode": {
          "type": "string"
        },
        "programId": {
          "type": "string",
          "minLength": 1
        },
        "recipient": {
          "type": "object",
          "required": [
            "name",
            "gender",
            "nationality",
            "identity",
            "contact",
            "address",
            "enrollmentType",
            "programId"
          ],
          "properties": {
            "address": {
              "type": "object",
              "required": [
                "addressLine1",
                "district",
                "state",
                "pincode"
              ],
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "country": {
                  "type": "string",
                  "minLength": 2
                },
                "district": {
                  "type": "string",
                  "minLength": 1
                },
                "pincode": {
                  "type": "string"
                },
                "state": {
                  "type": "string",
                  "minLength": 1
                }
              }
            },
            "age": {
              "type": "string",
              "minLength": 1
            },
            "contact": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              }
            },
            "dob": {
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "gender": {
              "type": "string",
              "minLength": 1
            },
            "identity": {
              "type": "string",
              "minLength": 1
            },
            "name": {
              "type": "string",
              "minLength": 1
            },
            "nationality": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "vaccination": {
          "type": "object",
          "required": [
            "name",
            "manufacturer",
            "date",
            "effectiveStart",
            "effectiveUntil",
            "dose",
            "totalDoses"
          ],
          "properties": {
            "batch": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "date"
            },
            "dose": {
              "description": "Dose number for example 1 for first dose of 2 doses",
              "type": "number",
              "minimum": 1,
              "example": 1
            },
            "effectiveStart": {
              "type": "string",
              "format": "date"
            },
            "effectiveUntil": {
              "type": "string",
              "format": "date"
            },
            "manufacturer": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "totalDoses": {
              "description": "Total number of doses required for this vaccination.",
              "type": "number",
              "minimum": 1,
              "example": 2
            }
          }
        },
        "vaccinator": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            }
          }
        }
      }
    },
    "CertificationRequestFacility": {
      "type": "object",
      "required": [
        "name",
        "address"
      ],
      "properties": {
        "address": {
          "type": "object",
          "required": [
            "addressLine1",
            "district",
            "state",
            "pincode"
          ],
          "properties": {
            "addressLine1": {
              "type": "string"
            },
            "addressLine2": {
              "type": "string"
            },
            "country": {
              "type": "string",
              "minLength": 2
            },
            "district": {
              "type": "string",
              "minLength": 1
            },
            "pincode": {
              "type": "string",
              "minLength": 1
            },
            "state": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "CertificationRequestFacilityAddress": {
      "type": "object",
      "required": [
        "addressLine1",
        "district",
        "state",
        "pincode"
      ],
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "country": {
          "type": "string",
          "minLength": 2
        },
        "district": {
          "type": "string",
          "minLength": 1
        },
        "pincode": {
          "type": "string",
          "minLength": 1
        },
        "state": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "CertificationRequestRecipient": {
      "type": "object",
      "required": [
        "name",
        "gender",
        "nationality",
        "identity",
        "contact",
        "address",
        "enrollmentType",
        "programId"
      ],
      "properties": {
        "address": {
          "type": "object",
          "required": [
            "addressLine1",
            "district",
            "state",
            "pincode"
          ],
          "properties": {
            "addressLine1": {
              "type": "string"
            },
            "addressLine2": {
              "type": "string"
            },
            "country": {
              "type": "string",
              "minLength": 2
            },
            "district": {
              "type": "string",
              "minLength": 1
            },
            "pincode": {
              "type": "string"
            },
            "state": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "age": {
          "type": "string",
          "minLength": 1
        },
        "contact": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "dob": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "gender": {
          "type": "string",
          "minLength": 1
        },
        "identity": {
          "type": "string",
          "minLength": 1
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "nationality": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "CertificationRequestRecipientAddress": {
      "type": "object",
      "required": [
        "addressLine1",
        "district",
        "state",
        "pincode"
      ],
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "country": {
          "type": "string",
          "minLength": 2
        },
        "district": {
          "type": "string",
          "minLength": 1
        },
        "pincode": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "CertificationRequestV2": {
      "type": "object",
      "required": [
        "preEnrollmentCode",
        "recipient",
        "vaccination",
        "facility"
      ],
      "properties": {
        "comorbidities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enrollmentType": {
          "type": "string",
          "minLength": 1
        },
        "facility": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "address": {
              "type": "object",
              "required": [
                "addressLine1",
                "district",
                "state",
                "pincode"
              ],
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "country": {
                  "type": "string",
                  "minLength": 2
                },
                "district": {
                  "type": "string",
                  "minLength": 1
                },
                "pincode": {
                  "type": "string",
                  "minLength": 1
                },
                "state": {
                  "type": "string",
                  "minLength": 1
                }
              }
            },
            "name": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "meta": {
          "type": "object"
        },
        "preEnrollmentCode": {
          "type": "string"
        },
        "programId": {
          "type": "string",
          "minLength": 1
        },
        "recipient": {
          "type": "object",
          "required": [
            "name",
            "nationality",
            "identity",
            "contact"
          ],
          "properties": {
            "address": {
              "type": "object",
              "required": [
                "addressLine1",
                "district",
                "state",
                "pincode"
              ],
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "country": {
                  "type": "string",
                  "minLength": 2
                },
                "district": {
                  "type": "string",
                  "minLength": 1
                },
                "pincode": {
                  "type": "string"
                },
                "state": {
                  "type": "string",
                  "minLength": 1
                }
              }
            },
            "age": {
              "type": "string",
              "minLength": 1
            },
            "contact": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              }
            },
            "dob": {
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "gender": {
              "type": "string",
              "minLength": 1
            },
            "identity": {
              "type": "string",
              "minLength": 1
            },
            "name": {
              "type": "string",
              "minLength": 1
            },
            "nationality": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "vaccination": {
          "type": "object",
          "required": [
            "name",
            "manufacturer",
            "date",
            "effectiveStart",
            "effectiveUntil",
            "dose",
            "totalDoses"
          ],
          "properties": {
            "batch": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "date"
            },
            "dose": {
              "description": "Dose number for example 1 for first dose of 2 doses",
              "type": "number",
              "minimum": 1,
              "example": 1
            },
            "effectiveStart": {
              "type": "string",
              "format": "date"
            },
            "effectiveUntil": {
              "type": "string",
              "format": "date"
            },
            "manufacturer": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "totalDoses": {
              "description": "Total number of doses required for this vaccination.",
              "type": "number",
              "minimum": 1,
              "example": 2
            }
          }
        },
        "vaccinator": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            }
          }
        }
      }
    },
    "CertificationRequestV2Facility": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "address": {
          "type": "object",
          "required": [
            "addressLine1",
            "district",
            "state",
            "pincode"
          ],
          "properties": {
            "addressLine1": {
              "type": "string"
            },
            "addressLine2": {
              "type": "string"
            },
            "country": {
              "type": "string",
              "minLength": 2
            },
            "district": {
              "type": "string",
              "minLength": 1
            },
            "pincode": {
              "type": "string",
              "minLength": 1
            },
            "state": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "CertificationRequestV2FacilityAddress": {
      "type": "object",
      "required": [
        "addressLine1",
        "district",
        "state",
        "pincode"
      ],
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "country": {
          "type": "string",
          "minLength": 2
        },
        "district": {
          "type": "string",
          "minLength": 1
        },
        "pincode": {
          "type": "string",
          "minLength": 1
        },
        "state": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "CertificationRequestV2Recipient": {
      "type": "object",
      "required": [
        "name",
        "nationality",
        "identity",
        "contact"
      ],
      "properties": {
        "address": {
          "type": "object",
          "required": [
            "addressLine1",
            "district",
            "state",
            "pincode"
          ],
          "properties": {
            "addressLine1": {
              "type": "string"
            },
            "addressLine2": {
              "type": "string"
            },
            "country": {
              "type": "string",
              "minLength": 2
            },
            "district": {
              "type": "string",
              "minLength": 1
            },
            "pincode": {
              "type": "string"
            },
            "state": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "age": {
          "type": "string",
          "minLength": 1
        },
        "contact": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "dob": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "gender": {
          "type": "string",
          "minLength": 1
        },
        "identity": {
          "type": "string",
          "minLength": 1
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "nationality": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "CertificationRequestV2RecipientAddress": {
      "type": "object",
      "required": [
        "addressLine1",
        "district",
        "state",
        "pincode"
      ],
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "country": {
          "type": "string",
          "minLength": 2
        },
        "district": {
          "type": "string",
          "minLength": 1
        },
        "pincode": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "CertificationRequestV2Vaccination": {
      "type": "object",
      "required": [
        "name",
        "manufacturer",
        "date",
        "effectiveStart",
        "effectiveUntil",
        "dose",
        "totalDoses"
      ],
      "properties": {
        "batch": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "dose": {
          "description": "Dose number for example 1 for first dose of 2 doses",
          "type": "number",
          "minimum": 1,
          "example": 1
        },
        "effectiveStart": {
          "type": "string",
          "format": "date"
        },
        "effectiveUntil": {
          "type": "string",
          "format": "date"
        },
        "manufacturer": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "totalDoses": {
          "description": "Total number of doses required for this vaccination.",
          "type": "number",
          "minimum": 1,
          "example": 2
        }
      }
    },
    "CertificationRequestV2Vaccinator": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "CertificationRequestVaccination": {
      "type": "object",
      "required": [
        "name",
        "manufacturer",
        "date",
        "effectiveStart",
        "effectiveUntil",
        "dose",
        "totalDoses"
      ],
      "properties": {
        "batch": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "dose": {
          "description": "Dose number for example 1 for first dose of 2 doses",
          "type": "number",
          "minimum": 1,
          "example": 1
        },
        "effectiveStart": {
          "type": "string",
          "format": "date"
        },
        "effectiveUntil": {
          "type": "string",
          "format": "date"
        },
        "manufacturer": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "totalDoses": {
          "description": "Total number of doses required for this vaccination.",
          "type": "number",
          "minimum": 1,
          "example": 2
        }
      }
    },
    "CertificationRequestVaccinator": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "EnrollmentAppointmentsItems0": {
      "type": "object",
      "properties": {
        "appointmentDate": {
          "type": "string",
          "format": "date",
          "x-omitempty": false
        },
        "appointmentSlot": {
          "type": "string",
          "x-omitempty": false
        },
        "certificateId": {
          "type": "string"
        },
        "certified": {
          "type": "boolean",
          "x-omitempty": false
        },
        "comorbidities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dose": {
          "type": "string",
          "x-omitempty": false
        },
        "enrollmentScopeId": {
          "type": "string",
          "x-omitempty": false
        },
        "osid": {
          "type": "string"
        },
        "programId": {
          "type": "string",
          "x-omitempty": false
        },
        "vaccine": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "extra": {
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "IdentityVerificationRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "properties": {
        "mobile": {
          "type": "string",
          "format": "string"
        },
        "token2fa": {
          "type": "string"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "Program": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "logoURL": {
          "type": "string"
        },
        "medicines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProgramMedicinesItems0"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ProgramMedicinesItems0": {
      "type": "object",
      "title": "medicine",
      "properties": {
        "doseIntervals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProgramMedicinesItems0DoseIntervalsItems0"
          }
        },
        "effectiveUntil": {
          "description": "Number of days the vaccination is effective after last dose",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "provider": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive",
            "Blocked"
          ]
        },
        "vaccinationMode": {
          "type": "string",
          "enum": [
            "muscular injection",
            "oral",
            "nasal"
          ]
        }
      }
    },
    "ProgramMedicinesItems0DoseIntervalsItems0": {
      "type": "object",
      "properties": {
        "max": {
          "type": "integer"
        },
        "min": {
          "type": "integer"
        }
      }
    },
    "TestCertificationRequest": {
      "type": "object",
      "required": [
        "preEnrollmentCode",
        "recipient",
        "testDetails",
        "facility"
      ],
      "properties": {
        "facility": {
          "type": "object",
          "required": [
            "name",
            "address"
          ],
          "properties": {
            "address": {
              "type": "object",
              "required": [
                "addressLine1",
                "district",
                "state",
                "pincode"
              ],
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "country": {
                  "type": "string",
                  "minLength": 2
                },
                "district": {
                  "type": "string",
                  "minLength": 1
                },
                "pincode": {
                  "type": "string",
                  "minLength": 1
                },
                "state": {
                  "type": "string",
                  "minLength": 1
                }
              }
            },
            "name": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "meta": {
          "type": "object"
        },
        "preEnrollmentCode": {
          "type": "string"
        },
        "programId": {
          "type": "string",
          "minLength": 1
        },
        "recipient": {
          "type": "object",
          "required": [
            "name",
            "gender",
            "dob",
            "identity",
            "contact"
          ],
          "properties": {
            "address": {
              "type": "object",
              "required": [
                "addressLine1",
                "district",
                "state",
                "pincode"
              ],
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "country": {
                  "type": "string",
                  "minLength": 2
                },
                "district": {
                  "type": "string",
                  "minLength": 1
                },
                "pincode": {
                  "type": "string"
                },
                "state": {
                  "type": "string",
                  "minLength": 1
                }
              }
            },
            "contact": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              }
            },
            "dob": {
              "type": "string",
              "format": "date",
              "x-nullable": true
            },
            "gender": {
              "type": "string",
              "minLength": 1
            },
            "identity": {
              "type": "string",
              "minLength": 1
            },
            "name": {
              "type": "string",
              "minLength": 1
            },
            "nationality": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "testDetails": {
          "type": "object",
          "required": [
            "testType",
            "disease",
            "sampleCollectionTimestamp",
            "resultTimestamp",
            "result"
          ],
          "properties": {
            "batch": {
              "type": "string"
            },
            "disease": {
              "type": "string"
            },
            "manufacturer": {
              "type": "string"
            },
            "result": {
              "type": "string",
              "enum": [
                "Positive",
                "Negative",
                "Inconclusive",
                "Void"
              ]
            },
            "resultTimestamp": {
              "type": "string",
              "format": "date-time"
            },
            "sampleCollectionTimestamp": {
              "type": "string",
              "format": "date-time"
            },
            "sampleOrigin": {
              "type": "string"
            },
            "testName": {
              "type": "string"
            },
            "testType": {
              "type": "string"
            }
          }
        },
        "verifier": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            }
          }
        }
      }
    },
    "TestCertificationRequestFacility": {
      "type": "object",
      "required": [
        "name",
        "address"
      ],
      "properties": {
        "address": {
          "type": "object",
          "required": [
            "addressLine1",
            "district",
            "state",
            "pincode"
          ],
          "properties": {
            "addressLine1": {
              "type": "string"
            },
            "addressLine2": {
              "type": "string"
            },
            "country": {
              "type": "string",
              "minLength": 2
            },
            "district": {
              "type": "string",
              "minLength": 1
            },
            "pincode": {
              "type": "string",
              "minLength": 1
            },
            "state": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "TestCertificationRequestFacilityAddress": {
      "type": "object",
      "required": [
        "addressLine1",
        "district",
        "state",
        "pincode"
      ],
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "country": {
          "type": "string",
          "minLength": 2
        },
        "district": {
          "type": "string",
          "minLength": 1
        },
        "pincode": {
          "type": "string",
          "minLength": 1
        },
        "state": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "TestCertificationRequestRecipient": {
      "type": "object",
      "required": [
        "name",
        "gender",
        "dob",
        "identity",
        "contact"
      ],
      "properties": {
        "address": {
          "type": "object",
          "required": [
            "addressLine1",
            "district",
            "state",
            "pincode"
          ],
          "properties": {
            "addressLine1": {
              "type": "string"
            },
            "addressLine2": {
              "type": "string"
            },
            "country": {
              "type": "string",
              "minLength": 2
            },
            "district": {
              "type": "string",
              "minLength": 1
            },
            "pincode": {
              "type": "string"
            },
            "state": {
              "type": "string",
              "minLength": 1
            }
          }
        },
        "contact": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "dob": {
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "gender": {
          "type": "string",
          "minLength": 1
        },
        "identity": {
          "type": "string",
          "minLength": 1
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "nationality": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "TestCertificationRequestRecipientAddress": {
      "type": "object",
      "required": [
        "addressLine1",
        "district",
        "state",
        "pincode"
      ],
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "country": {
          "type": "string",
          "minLength": 2
        },
        "district": {
          "type": "string",
          "minLength": 1
        },
        "pincode": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "TestCertificationRequestTestDetails": {
      "type": "object",
      "required": [
        "testType",
        "disease",
        "sampleCollectionTimestamp",
        "resultTimestamp",
        "result"
      ],
      "properties": {
        "batch": {
          "type": "string"
        },
        "disease": {
          "type": "string"
        },
        "manufacturer": {
          "type": "string"
        },
        "result": {
          "type": "string",
          "enum": [
            "Positive",
            "Negative",
            "Inconclusive",
            "Void"
          ]
        },
        "resultTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "sampleCollectionTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "sampleOrigin": {
          "type": "string"
        },
        "testName": {
          "type": "string"
        },
        "testType": {
          "type": "string"
        }
      }
    },
    "TestCertificationRequestVerifier": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "VaccinatorProgramsItems0": {
      "type": "object",
      "properties": {
        "certified": {
          "type": "boolean"
        },
        "certifiedUpdatedAt": {
          "type": "string",
          "format": "date",
          "$id": "#/properties/certifiedUpdatedAt"
        },
        "id": {
          "type": "string"
        },
        "statusUpdatedAt": {
          "type": "string",
          "format": "date",
          "$id": "#/properties/statusUpdatedAt"
        }
      }
    },
    "address": {
      "description": "Indian address format",
      "type": "object",
      "title": "Address",
      "required": [
        "addressLine1",
        "district",
        "state",
        "pincode"
      ],
      "properties": {
        "addressLine1": {
          "description": "Address line 1",
          "type": "string",
          "title": "The address line 1",
          "$id": "#/properties/address/properties/addressLine1"
        },
        "addressLine2": {
          "type": "string",
          "title": "The address2 schema",
          "$id": "#/properties/address/properties/addressLine2"
        },
        "district": {
          "type": "string",
          "title": "The district schema",
          "$id": "#/properties/address/properties/district"
        },
        "pincode": {
          "type": "string",
          "title": "The pincode schema",
          "$id": "#/properties/address/properties/pincode"
        },
        "state": {
          "description": "State of address",
          "type": "string",
          "title": "The state schema",
          "$id": "#/properties/address/properties/state",
          "examples": [
            "Karnataka"
          ]
        }
      },
      "examples": [
        {
          "addressLine1": "no. 23, some lane, some road",
          "addressLine2": "some nagar",
          "district": "bangalore south",
          "pincode": "560000",
          "state": "Karnataka"
        }
      ]
    },
    "enrollment": {
      "type": "object",
      "required": [
        "identity"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/address"
        },
        "appointments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnrollmentAppointmentsItems0"
          }
        },
        "beneficiaryPhone": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "comorbidities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dob": {
          "type": "string",
          "format": "date"
        },
        "email": {
          "type": "string"
        },
        "enrollmentType": {
          "type": "string",
          "enum": [
            "SELF_ENRL",
            "PRE_ENRL",
            "WALK_IN"
          ]
        },
        "gender": {
          "type": "string",
          "enum": [
            "Male",
            "Female",
            "Other"
          ]
        },
        "identity": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nationalId": {
          "type": "string"
        },
        "osid": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "yob": {
          "type": "integer"
        }
      }
    },
    "sideEffectsResponse": {
      "description": "Indian address format",
      "type": "object",
      "title": "SideEffectsResponse",
      "required": [
        "symptom",
        "response"
      ],
      "properties": {
        "response": {
          "description": "response",
          "type": "string",
          "title": "response",
          "$id": "#/properties/sideEffectsResponse/properties/response"
        },
        "symptom": {
          "description": "symptom",
          "type": "string",
          "title": "symptom",
          "$id": "#/properties/sideEffectsResponse/properties/symptom"
        }
      },
      "$id": "#/properties/SideEffectsResponse",
      "examples": [
        {
          "response": "yes",
          "symptom": "rapid heartbeat"
        }
      ]
    },
    "signature": {
      "type": "object",
      "title": "The Signature Schema for the registry",
      "required": [
        "@type",
        "signatureFor",
        "creator",
        "created",
        "signatureValue"
      ],
      "properties": {
        "@type": {
          "type": "string",
          "default": "sc:RsaSignature2018",
          "enum": [
            "sc:LinkedDataSignature2015",
            "sc:GraphSignature2012",
            "sc:RsaSignature2018"
          ],
          "$id": "#/properties/@type"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "$comment": "Timestamp",
          "$id": "#/properties/created",
          "examples": [
            "2017-09-23T20:21:34Z"
          ]
        },
        "creator": {
          "type": "string",
          "format": "uri",
          "$comment": "IRI where the public key associated could be retrieved",
          "$id": "#/properties/creator",
          "examples": [
            "https://example.com/i/pat/keys/"
          ]
        },
        "nonce": {
          "type": "string",
          "$comment": "Some unique value for tracking",
          "$id": "#/properties/nonce",
          "examples": [
            "guid"
          ]
        },
        "signatureFor": {
          "type": "string",
          "$comment": "The attribute name or entity id you for which this is the signature",
          "$id": "#/properties/signatureFor",
          "examples": [
            "http://localhost:8080/serialNum",
            "http://localhost:8080/9cba6ddd-330c-4a0d-929a-771bb12cb0d3"
          ]
        },
        "signatureValue": {
          "type": "string",
          "$comment": "Hash or signed value",
          "$id": "#/properties/signatureValue",
          "examples": [
            "eyiOiJKJeXAasddOEjgFWFXk"
          ]
        }
      },
      "$id": "#/properties/Signature"
    },
    "vaccinator": {
      "type": "object",
      "title": "The Vaccinator Schema",
      "required": [
        "code",
        "nationalIdentifier",
        "name",
        "facilityIds",
        "mobileNumber",
        "status",
        "email"
      ],
      "properties": {
        "___encryptedFields": {},
        "averageRating": {
          "type": "number"
        },
        "code": {
          "type": "string",
          "$comment": "Code",
          "$id": "#/properties/code"
        },
        "email": {
          "type": "string",
          "$comment": "Email Id",
          "$id": "#/properties/email"
        },
        "facilityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mobileNumber": {
          "type": "string",
          "maxLength": 10,
          "minLength": 10
        },
        "name": {
          "type": "string",
          "title": "Full name",
          "$id": "#/properties/name"
        },
        "nationalIdentifier": {
          "type": "string",
          "$comment": "Nationality",
          "$id": "#/properties/nationalIdentifier"
        },
        "programs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VaccinatorProgramsItems0"
          },
          "$id": "#/properties/programs"
        },
        "signatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/signature"
          },
          "$comment": "Placeholder for all verifiable claims",
          "$id": "#/properties/signatures"
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ]
        },
        "trainingCertificate": {
          "type": "string"
        }
      },
      "$id": "#/properties/Vaccinator"
    }
  },
  "securityDefinitions": {
    "hasRole": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://divoc.xiv.in/keycloak/auth/realms/divoc/protocol/openid-connect/auth",
      "tokenUrl": "https://divoc.xiv.in/keycloak/auth/realms/divoc/protocol/openid-connect/token",
      "scopes": {
        "admin": "scope of super admin",
        "facility-admin": "scope of facility admin",
        "facility-staff": "scope of facility staff"
      }
    }
  },
  "security": [
    {
      "hasRole": [
        "facility-staff"
      ]
    }
  ]
}`))
}
