// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Digital infra for vaccination certificates",
    "title": "Divoc",
    "version": "1.0.0"
  },
  "host": "divoc.xiv.in",
  "basePath": "/divoc/api",
  "paths": {
    "/authorize": {
      "post": {
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "login"
        ],
        "summary": "Establish token",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/bulkCertify": {
      "post": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "description": "certify all the data in uploaded csv",
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "certification"
        ],
        "summary": "Upload certification csv for bulk ingestion",
        "operationId": "bulkCertify",
        "parameters": [
          {
            "type": "file",
            "description": "Certification data in the form of csv",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/certificate": {
      "put": {
        "description": "Update existing certificate if all checks are passed",
        "tags": [
          "certification"
        ],
        "summary": "Update existing certificate request",
        "operationId": "updateCertificate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CertificationRequestV2"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Update not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/certificate/revoked": {
      "post": {
        "security": [],
        "tags": [
          "certificateRevoked"
        ],
        "summary": "Check if given certificate is revoked",
        "operationId": "certificateRevoked",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "certificate not found in revocation list"
          }
        }
      }
    },
    "/v1/certificates": {
      "get": {
        "security": [
          {
            "hasRole": [
              "recipient"
            ]
          }
        ],
        "summary": "Get certificate json",
        "operationId": "getCertificate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/certificates/revoke": {
      "post": {
        "security": [],
        "tags": [
          "certification"
        ],
        "summary": "Revoke certificates for given preEnrollmentCode and dose",
        "operationId": "revokeCertificate",
        "parameters": [
          {
            "type": "string",
            "description": "refId for which certificate needs to be revoked",
            "name": "preEnrollmentCode",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "dose for which certificate needs to be revoked",
            "name": "dose",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "certificate not found for given beneficiary, dose"
          }
        }
      }
    },
    "/v1/certify": {
      "post": {
        "description": "Certification happens asynchronously, this requires vaccinator athorization and vaccinator should be trained for the vaccination that is being certified.",
        "tags": [
          "certification"
        ],
        "summary": "Certify the one or more vaccination",
        "operationId": "certify",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CertificationRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/certify/uploads": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "tags": [
          "certification"
        ],
        "summary": "Get all file uploads for certification for given facility admin",
        "operationId": "getCertifyUploads",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/certify/uploads/{uploadId}/errors": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "tags": [
          "certification"
        ],
        "summary": "Get all the error rows associated with given uploadId",
        "operationId": "getCertifyUploadErrors",
        "parameters": [
          {
            "type": "integer",
            "description": "Id of uploaded csv file",
            "name": "uploadId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden for user"
          },
          "404": {
            "description": "certify upload for given uploadID not found"
          }
        }
      }
    },
    "/v1/divoc/configuration": {
      "get": {
        "tags": [
          "configuration"
        ],
        "summary": "Get Meta information about the application flow",
        "operationId": "getConfiguration",
        "parameters": [
          {
            "type": "string",
            "name": "lastKnownVersion",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApplicationConfiguration"
            }
          }
        }
      }
    },
    "/v1/events": {
      "post": {
        "security": [],
        "summary": "Send events for monitoring / tracking purpose.",
        "operationId": "events",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Event"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/identity/verify": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "identity"
        ],
        "summary": "Validate identity if the person",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/IdentityVerificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "206": {
            "description": "Need OTP"
          }
        }
      }
    },
    "/v1/ping": {
      "get": {
        "security": [],
        "description": "This operation shows how to override the global security defined above, as we want to open it up for all users.",
        "summary": "Server heartbeat operation",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/preEnrollments": {
      "get": {
        "tags": [
          "vaccination"
        ],
        "summary": "Get all pre enrollments applicable to assigned facility",
        "operationId": "getPreEnrollmentsForFacility",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PreEnrollment"
              }
            }
          }
        }
      }
    },
    "/v1/preEnrollments/{preEnrollmentCode}": {
      "get": {
        "description": "Get pre enrollment data from api for vaccination",
        "tags": [
          "vaccination"
        ],
        "summary": "Get pre enrollment information",
        "operationId": "getPreEnrollment",
        "parameters": [
          {
            "type": "string",
            "name": "preEnrollmentCode",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PreEnrollment"
            }
          }
        }
      }
    },
    "/v1/programs/current": {
      "get": {
        "tags": [
          "configuration"
        ],
        "summary": "Get active vaccination programs",
        "operationId": "getCurrentPrograms",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Program"
              }
            }
          }
        }
      }
    },
    "/v1/report-side-effects": {
      "post": {
        "security": [
          {
            "hasRole": [
              "recipient"
            ]
          }
        ],
        "tags": [
          "reportSideEffects"
        ],
        "summary": "Create reported side effects",
        "operationId": "createReportedSideEffects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "certificateId": {
                  "type": "string"
                },
                "sideEffectsResponse": {
                  "type": "array",
                  "items": {
                    "$ref": "../registry/RecipientSideEffects.json#/definitions/SideEffectsResponse"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/sideEffects": {
      "get": {
        "security": [],
        "tags": [
          "sideEffects"
        ],
        "summary": "Get Side Effects Metadata",
        "operationId": "getSideEffectsMetadata",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/users/me": {
      "get": {
        "tags": [
          "vaccination"
        ],
        "summary": "Get User information",
        "operationId": "getLoggedInUserInfo",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          }
        }
      }
    },
    "/v1/vaccinators": {
      "get": {
        "tags": [
          "configuration"
        ],
        "summary": "Get active vaccinators mapped for the facility",
        "operationId": "getVaccinators",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "../registry/Vaccinator.json#/definitions/Vaccinator"
              }
            }
          }
        }
      }
    },
    "/v2/certify": {
      "post": {
        "description": "Certification happens asynchronously, this requires vaccinator athorization and vaccinator should be trained for the vaccination that is being certified.",
        "tags": [
          "certification"
        ],
        "summary": "Certify the one or more vaccination",
        "operationId": "certifyV2",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CertificationRequestV2"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "./vaccination-api.yaml#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApplicationConfiguration": {
      "type": "object",
      "properties": {
        "navigation": {
          "type": "object"
        },
        "styles": {
          "type": "object"
        },
        "validation": {
          "type": "object"
        }
      }
    },
    "CertificationRequest": {
      "type": "object",
      "properties": {
        "facility": {
          "type": "object",
          "properties": {
            "address": {
              "type": "object",
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "district": {
                  "type": "string"
                },
                "pincode": {
                  "type": "integer"
                },
                "state": {
                  "type": "string"
                }
              }
            },
            "name": {
              "type": "string"
            }
          }
        },
        "meta": {
          "type": "object"
        },
        "preEnrollmentCode": {
          "type": "string"
        },
        "recipient": {
          "type": "object",
          "properties": {
            "address": {
              "type": "object",
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "district": {
                  "type": "string"
                },
                "pincode": {
                  "type": "integer"
                },
                "state": {
                  "type": "string"
                }
              }
            },
            "age": {
              "type": "string"
            },
            "contact": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "dob": {
              "type": "string",
              "format": "date"
            },
            "gender": {
              "type": "string"
            },
            "identity": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "nationality": {
              "type": "string"
            }
          }
        },
        "vaccination": {
          "type": "object",
          "properties": {
            "batch": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "dose": {
              "description": "Dose number for example 1 for first dose of 2 doses",
              "type": "number",
              "example": 1
            },
            "effectiveStart": {
              "type": "string",
              "format": "date"
            },
            "effectiveUntil": {
              "type": "string",
              "format": "date"
            },
            "manufacturer": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "totalDoses": {
              "description": "Total number of doses required for this vaccination.",
              "type": "number",
              "example": 2
            }
          }
        },
        "vaccinator": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          }
        }
      }
    },
    "CertificationRequestV2": {
      "type": "object",
      "properties": {
        "facility": {
          "type": "object",
          "properties": {
            "address": {
              "type": "object",
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "district": {
                  "type": "string"
                },
                "pincode": {
                  "type": "integer"
                },
                "state": {
                  "type": "string"
                }
              }
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "operatorId": {
              "type": "string"
            },
            "operatorName": {
              "type": "string"
            }
          }
        },
        "meta": {
          "type": "object",
          "properties": {
            "facilityType": {
              "description": "CG - central govt, SG - State govt, PR - Private Facility",
              "type": "string",
              "enum": [
                "CG",
                "SG",
                "PR"
              ]
            },
            "paymentType": {
              "description": "G for Govt, S for Self, V for Voucher, D for DBT, A for AyushmanBharat, I for Other Insurance",
              "type": "string",
              "enum": [
                "G",
                "S",
                "V",
                "D",
                "A",
                "I"
              ]
            },
            "previousCertificateId": {
              "type": "string"
            },
            "registrationCategory": {
              "description": "F for frontline officers, C for comorbidity category, R for regular others",
              "type": "string",
              "enum": [
                "F",
                "C",
                "R"
              ]
            },
            "registrationDataMode": {
              "description": "Recipient data capture mode DE for Data Entry, SQ for Signed QR, RQ for Regular QR, PR for Pre Registration",
              "type": "string",
              "enum": [
                "DE",
                "SQ",
                "RQ",
                "PR"
              ]
            },
            "sessionDurationInMinutes": {
              "description": "Vaccination session duration in minutes",
              "type": "integer"
            },
            "uploadTimestamp": {
              "type": "string",
              "format": "date-time"
            },
            "vaccinationApp": {
              "type": "object",
              "properties": {
                "appMode": {
                  "type": "string",
                  "enum": [
                    "Online",
                    "Offline"
                  ]
                },
                "connectionType": {
                  "description": "W - Wifi, M - mobile data, L - LAN/WAN",
                  "type": "string",
                  "enum": [
                    "W",
                    "M",
                    "L"
                  ]
                },
                "device": {
                  "description": "Type of device, D - Desktop, M - Mobile, T - Tablet",
                  "type": "string",
                  "enum": [
                    "D",
                    "M",
                    "T"
                  ]
                },
                "deviceOS": {
                  "description": "Type of Operating system on the device, W for Windows, A for Android, L for Linux, M for Mac, I for ios",
                  "type": "string",
                  "enum": [
                    "W",
                    "A",
                    "L",
                    "M",
                    "I"
                  ]
                },
                "name": {
                  "type": "string"
                },
                "oSVersion": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "P",
                    "M",
                    "D"
                  ]
                },
                "version": {
                  "type": "string"
                }
              }
            },
            "verificationAttempts": {
              "description": "ID verification number of attempts (ex number of attempts done for Aadhaar)",
              "type": "integer"
            },
            "verificationDurationInSeconds": {
              "description": "ID verification duration (duration in seconds for ID verification)",
              "type": "integer"
            },
            "waitForVaccinationInMinutes": {
              "description": "Time between verification and vaccination (in minutes)",
              "type": "integer"
            }
          }
        },
        "preEnrollmentCode": {
          "type": "string"
        },
        "recipient": {
          "type": "object",
          "properties": {
            "address": {
              "type": "object",
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "district": {
                  "type": "string"
                },
                "pincode": {
                  "type": "integer"
                },
                "state": {
                  "type": "string"
                }
              }
            },
            "age": {
              "type": "string"
            },
            "contact": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "dob": {
              "type": "string",
              "format": "date"
            },
            "gender": {
              "type": "string"
            },
            "identity": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "nationality": {
              "type": "string"
            },
            "uhid": {
              "type": "string"
            }
          }
        },
        "vaccination": {
          "type": "object",
          "properties": {
            "batch": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "dose": {
              "description": "Dose number for example 1 for first dose of 2 doses",
              "type": "number",
              "example": 1
            },
            "effectiveStart": {
              "type": "string",
              "format": "date"
            },
            "effectiveUntil": {
              "type": "string",
              "format": "date"
            },
            "manufacturer": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "totalDoses": {
              "description": "Total number of doses required for this vaccination.",
              "type": "number",
              "example": 2
            }
          }
        },
        "vaccinator": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "extra": {
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "IdentityVerificationRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "properties": {
        "mobile": {
          "type": "string"
        },
        "token2fa": {
          "type": "string"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "PreEnrollment": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "dob": {
          "type": "string",
          "format": "date"
        },
        "email": {
          "type": "string"
        },
        "enrollmentScopeId": {
          "type": "string"
        },
        "gender": {
          "type": "string",
          "enum": [
            "Male",
            "Female",
            "Other"
          ]
        },
        "meta": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "nationalId": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "Program": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "logoURL": {
          "type": "string"
        },
        "medicines": {
          "type": "array",
          "items": {
            "type": "object",
            "title": "medicine",
            "properties": {
              "effectiveUntil": {
                "description": "Number of months the vaccination is effective",
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "price": {
                "type": "number"
              },
              "provider": {
                "type": "string"
              },
              "schedule": {
                "type": "object",
                "properties": {
                  "repeatInterval": {
                    "type": "integer"
                  },
                  "repeatTimes": {
                    "type": "integer"
                  }
                }
              },
              "status": {
                "type": "string",
                "enum": [
                  "Active",
                  "Inactive",
                  "Blocked"
                ]
              },
              "vaccinationMode": {
                "type": "string",
                "enum": [
                  "muscular injection",
                  "oral",
                  "nasal"
                ]
              }
            }
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "hasRole": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://divoc.xiv.in/keycloak/auth/realms/divoc/protocol/openid-connect/auth",
      "tokenUrl": "https://divoc.xiv.in/keycloak/auth/realms/divoc/protocol/openid-connect/token",
      "scopes": {
        "admin": "scope of super admin",
        "facility-admin": "scope of facility admin",
        "facility-staff": "scope of facility staff"
      }
    }
  },
  "security": [
    {
      "hasRole": [
        "facility-staff"
      ]
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Digital infra for vaccination certificates",
    "title": "Divoc",
    "version": "1.0.0"
  },
  "host": "divoc.xiv.in",
  "basePath": "/divoc/api",
  "paths": {
    "/authorize": {
      "post": {
        "security": [],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "login"
        ],
        "summary": "Establish token",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/bulkCertify": {
      "post": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "description": "certify all the data in uploaded csv",
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "certification"
        ],
        "summary": "Upload certification csv for bulk ingestion",
        "operationId": "bulkCertify",
        "parameters": [
          {
            "type": "file",
            "description": "Certification data in the form of csv",
            "name": "file",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/certificate": {
      "put": {
        "description": "Update existing certificate if all checks are passed",
        "tags": [
          "certification"
        ],
        "summary": "Update existing certificate request",
        "operationId": "updateCertificate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CertificationRequestV2"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Update not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/certificate/revoked": {
      "post": {
        "security": [],
        "tags": [
          "certificateRevoked"
        ],
        "summary": "Check if given certificate is revoked",
        "operationId": "certificateRevoked",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "certificate not found in revocation list"
          }
        }
      }
    },
    "/v1/certificates": {
      "get": {
        "security": [
          {
            "hasRole": [
              "recipient"
            ]
          }
        ],
        "summary": "Get certificate json",
        "operationId": "getCertificate",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/certificates/revoke": {
      "post": {
        "security": [],
        "tags": [
          "certification"
        ],
        "summary": "Revoke certificates for given preEnrollmentCode and dose",
        "operationId": "revokeCertificate",
        "parameters": [
          {
            "type": "string",
            "description": "refId for which certificate needs to be revoked",
            "name": "preEnrollmentCode",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "dose for which certificate needs to be revoked",
            "name": "dose",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "certificate not found for given beneficiary, dose"
          }
        }
      }
    },
    "/v1/certify": {
      "post": {
        "description": "Certification happens asynchronously, this requires vaccinator athorization and vaccinator should be trained for the vaccination that is being certified.",
        "tags": [
          "certification"
        ],
        "summary": "Certify the one or more vaccination",
        "operationId": "certify",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CertificationRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/certify/uploads": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "tags": [
          "certification"
        ],
        "summary": "Get all file uploads for certification for given facility admin",
        "operationId": "getCertifyUploads",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/v1/certify/uploads/{uploadId}/errors": {
      "get": {
        "security": [
          {
            "hasRole": [
              "facility-admin"
            ]
          }
        ],
        "tags": [
          "certification"
        ],
        "summary": "Get all the error rows associated with given uploadId",
        "operationId": "getCertifyUploadErrors",
        "parameters": [
          {
            "type": "integer",
            "description": "Id of uploaded csv file",
            "name": "uploadId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden for user"
          },
          "404": {
            "description": "certify upload for given uploadID not found"
          }
        }
      }
    },
    "/v1/divoc/configuration": {
      "get": {
        "tags": [
          "configuration"
        ],
        "summary": "Get Meta information about the application flow",
        "operationId": "getConfiguration",
        "parameters": [
          {
            "type": "string",
            "name": "lastKnownVersion",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApplicationConfiguration"
            }
          }
        }
      }
    },
    "/v1/events": {
      "post": {
        "security": [],
        "summary": "Send events for monitoring / tracking purpose.",
        "operationId": "events",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/Event"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/identity/verify": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "identity"
        ],
        "summary": "Validate identity if the person",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/IdentityVerificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "206": {
            "description": "Need OTP"
          }
        }
      }
    },
    "/v1/ping": {
      "get": {
        "security": [],
        "description": "This operation shows how to override the global security defined above, as we want to open it up for all users.",
        "summary": "Server heartbeat operation",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/preEnrollments": {
      "get": {
        "tags": [
          "vaccination"
        ],
        "summary": "Get all pre enrollments applicable to assigned facility",
        "operationId": "getPreEnrollmentsForFacility",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PreEnrollment"
              }
            }
          }
        }
      }
    },
    "/v1/preEnrollments/{preEnrollmentCode}": {
      "get": {
        "description": "Get pre enrollment data from api for vaccination",
        "tags": [
          "vaccination"
        ],
        "summary": "Get pre enrollment information",
        "operationId": "getPreEnrollment",
        "parameters": [
          {
            "type": "string",
            "name": "preEnrollmentCode",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PreEnrollment"
            }
          }
        }
      }
    },
    "/v1/programs/current": {
      "get": {
        "tags": [
          "configuration"
        ],
        "summary": "Get active vaccination programs",
        "operationId": "getCurrentPrograms",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Program"
              }
            }
          }
        }
      }
    },
    "/v1/report-side-effects": {
      "post": {
        "security": [
          {
            "hasRole": [
              "recipient"
            ]
          }
        ],
        "tags": [
          "reportSideEffects"
        ],
        "summary": "Create reported side effects",
        "operationId": "createReportedSideEffects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "certificateId": {
                  "type": "string"
                },
                "sideEffectsResponse": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/sideEffectsResponse"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/v1/sideEffects": {
      "get": {
        "security": [],
        "tags": [
          "sideEffects"
        ],
        "summary": "Get Side Effects Metadata",
        "operationId": "getSideEffectsMetadata",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v1/users/me": {
      "get": {
        "tags": [
          "vaccination"
        ],
        "summary": "Get User information",
        "operationId": "getLoggedInUserInfo",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            }
          }
        }
      }
    },
    "/v1/vaccinators": {
      "get": {
        "tags": [
          "configuration"
        ],
        "summary": "Get active vaccinators mapped for the facility",
        "operationId": "getVaccinators",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/vaccinator"
              }
            }
          }
        }
      }
    },
    "/v2/certify": {
      "post": {
        "description": "Certification happens asynchronously, this requires vaccinator athorization and vaccinator should be trained for the vaccination that is being certified.",
        "tags": [
          "certification"
        ],
        "summary": "Certify the one or more vaccination",
        "operationId": "certifyV2",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CertificationRequestV2"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "type": "object",
              "required": [
                "code",
                "message"
              ],
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApplicationConfiguration": {
      "type": "object",
      "properties": {
        "navigation": {
          "type": "object"
        },
        "styles": {
          "type": "object"
        },
        "validation": {
          "type": "object"
        }
      }
    },
    "CertificationRequest": {
      "type": "object",
      "properties": {
        "facility": {
          "type": "object",
          "properties": {
            "address": {
              "type": "object",
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "district": {
                  "type": "string"
                },
                "pincode": {
                  "type": "integer"
                },
                "state": {
                  "type": "string"
                }
              }
            },
            "name": {
              "type": "string"
            }
          }
        },
        "meta": {
          "type": "object"
        },
        "preEnrollmentCode": {
          "type": "string"
        },
        "recipient": {
          "type": "object",
          "properties": {
            "address": {
              "type": "object",
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "district": {
                  "type": "string"
                },
                "pincode": {
                  "type": "integer"
                },
                "state": {
                  "type": "string"
                }
              }
            },
            "age": {
              "type": "string"
            },
            "contact": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "dob": {
              "type": "string",
              "format": "date"
            },
            "gender": {
              "type": "string"
            },
            "identity": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "nationality": {
              "type": "string"
            }
          }
        },
        "vaccination": {
          "type": "object",
          "properties": {
            "batch": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "dose": {
              "description": "Dose number for example 1 for first dose of 2 doses",
              "type": "number",
              "example": 1
            },
            "effectiveStart": {
              "type": "string",
              "format": "date"
            },
            "effectiveUntil": {
              "type": "string",
              "format": "date"
            },
            "manufacturer": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "totalDoses": {
              "description": "Total number of doses required for this vaccination.",
              "type": "number",
              "example": 2
            }
          }
        },
        "vaccinator": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          }
        }
      }
    },
    "CertificationRequestFacility": {
      "type": "object",
      "properties": {
        "address": {
          "type": "object",
          "properties": {
            "addressLine1": {
              "type": "string"
            },
            "addressLine2": {
              "type": "string"
            },
            "district": {
              "type": "string"
            },
            "pincode": {
              "type": "integer"
            },
            "state": {
              "type": "string"
            }
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CertificationRequestFacilityAddress": {
      "type": "object",
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "pincode": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "CertificationRequestRecipient": {
      "type": "object",
      "properties": {
        "address": {
          "type": "object",
          "properties": {
            "addressLine1": {
              "type": "string"
            },
            "addressLine2": {
              "type": "string"
            },
            "district": {
              "type": "string"
            },
            "pincode": {
              "type": "integer"
            },
            "state": {
              "type": "string"
            }
          }
        },
        "age": {
          "type": "string"
        },
        "contact": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dob": {
          "type": "string",
          "format": "date"
        },
        "gender": {
          "type": "string"
        },
        "identity": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        }
      }
    },
    "CertificationRequestRecipientAddress": {
      "type": "object",
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "pincode": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "CertificationRequestV2": {
      "type": "object",
      "properties": {
        "facility": {
          "type": "object",
          "properties": {
            "address": {
              "type": "object",
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "district": {
                  "type": "string"
                },
                "pincode": {
                  "type": "integer"
                },
                "state": {
                  "type": "string"
                }
              }
            },
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "operatorId": {
              "type": "string"
            },
            "operatorName": {
              "type": "string"
            }
          }
        },
        "meta": {
          "type": "object",
          "properties": {
            "facilityType": {
              "description": "CG - central govt, SG - State govt, PR - Private Facility",
              "type": "string",
              "enum": [
                "CG",
                "SG",
                "PR"
              ]
            },
            "paymentType": {
              "description": "G for Govt, S for Self, V for Voucher, D for DBT, A for AyushmanBharat, I for Other Insurance",
              "type": "string",
              "enum": [
                "G",
                "S",
                "V",
                "D",
                "A",
                "I"
              ]
            },
            "previousCertificateId": {
              "type": "string"
            },
            "registrationCategory": {
              "description": "F for frontline officers, C for comorbidity category, R for regular others",
              "type": "string",
              "enum": [
                "F",
                "C",
                "R"
              ]
            },
            "registrationDataMode": {
              "description": "Recipient data capture mode DE for Data Entry, SQ for Signed QR, RQ for Regular QR, PR for Pre Registration",
              "type": "string",
              "enum": [
                "DE",
                "SQ",
                "RQ",
                "PR"
              ]
            },
            "sessionDurationInMinutes": {
              "description": "Vaccination session duration in minutes",
              "type": "integer"
            },
            "uploadTimestamp": {
              "type": "string",
              "format": "date-time"
            },
            "vaccinationApp": {
              "type": "object",
              "properties": {
                "appMode": {
                  "type": "string",
                  "enum": [
                    "Online",
                    "Offline"
                  ]
                },
                "connectionType": {
                  "description": "W - Wifi, M - mobile data, L - LAN/WAN",
                  "type": "string",
                  "enum": [
                    "W",
                    "M",
                    "L"
                  ]
                },
                "device": {
                  "description": "Type of device, D - Desktop, M - Mobile, T - Tablet",
                  "type": "string",
                  "enum": [
                    "D",
                    "M",
                    "T"
                  ]
                },
                "deviceOS": {
                  "description": "Type of Operating system on the device, W for Windows, A for Android, L for Linux, M for Mac, I for ios",
                  "type": "string",
                  "enum": [
                    "W",
                    "A",
                    "L",
                    "M",
                    "I"
                  ]
                },
                "name": {
                  "type": "string"
                },
                "oSVersion": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "P",
                    "M",
                    "D"
                  ]
                },
                "version": {
                  "type": "string"
                }
              }
            },
            "verificationAttempts": {
              "description": "ID verification number of attempts (ex number of attempts done for Aadhaar)",
              "type": "integer"
            },
            "verificationDurationInSeconds": {
              "description": "ID verification duration (duration in seconds for ID verification)",
              "type": "integer"
            },
            "waitForVaccinationInMinutes": {
              "description": "Time between verification and vaccination (in minutes)",
              "type": "integer"
            }
          }
        },
        "preEnrollmentCode": {
          "type": "string"
        },
        "recipient": {
          "type": "object",
          "properties": {
            "address": {
              "type": "object",
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "district": {
                  "type": "string"
                },
                "pincode": {
                  "type": "integer"
                },
                "state": {
                  "type": "string"
                }
              }
            },
            "age": {
              "type": "string"
            },
            "contact": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "dob": {
              "type": "string",
              "format": "date"
            },
            "gender": {
              "type": "string"
            },
            "identity": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "nationality": {
              "type": "string"
            },
            "uhid": {
              "type": "string"
            }
          }
        },
        "vaccination": {
          "type": "object",
          "properties": {
            "batch": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "date-time"
            },
            "dose": {
              "description": "Dose number for example 1 for first dose of 2 doses",
              "type": "number",
              "example": 1
            },
            "effectiveStart": {
              "type": "string",
              "format": "date"
            },
            "effectiveUntil": {
              "type": "string",
              "format": "date"
            },
            "manufacturer": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "totalDoses": {
              "description": "Total number of doses required for this vaccination.",
              "type": "number",
              "example": 2
            }
          }
        },
        "vaccinator": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          }
        }
      }
    },
    "CertificationRequestV2Facility": {
      "type": "object",
      "properties": {
        "address": {
          "type": "object",
          "properties": {
            "addressLine1": {
              "type": "string"
            },
            "addressLine2": {
              "type": "string"
            },
            "district": {
              "type": "string"
            },
            "pincode": {
              "type": "integer"
            },
            "state": {
              "type": "string"
            }
          }
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "operatorId": {
          "type": "string"
        },
        "operatorName": {
          "type": "string"
        }
      }
    },
    "CertificationRequestV2FacilityAddress": {
      "type": "object",
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "pincode": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "CertificationRequestV2Meta": {
      "type": "object",
      "properties": {
        "facilityType": {
          "description": "CG - central govt, SG - State govt, PR - Private Facility",
          "type": "string",
          "enum": [
            "CG",
            "SG",
            "PR"
          ]
        },
        "paymentType": {
          "description": "G for Govt, S for Self, V for Voucher, D for DBT, A for AyushmanBharat, I for Other Insurance",
          "type": "string",
          "enum": [
            "G",
            "S",
            "V",
            "D",
            "A",
            "I"
          ]
        },
        "previousCertificateId": {
          "type": "string"
        },
        "registrationCategory": {
          "description": "F for frontline officers, C for comorbidity category, R for regular others",
          "type": "string",
          "enum": [
            "F",
            "C",
            "R"
          ]
        },
        "registrationDataMode": {
          "description": "Recipient data capture mode DE for Data Entry, SQ for Signed QR, RQ for Regular QR, PR for Pre Registration",
          "type": "string",
          "enum": [
            "DE",
            "SQ",
            "RQ",
            "PR"
          ]
        },
        "sessionDurationInMinutes": {
          "description": "Vaccination session duration in minutes",
          "type": "integer"
        },
        "uploadTimestamp": {
          "type": "string",
          "format": "date-time"
        },
        "vaccinationApp": {
          "type": "object",
          "properties": {
            "appMode": {
              "type": "string",
              "enum": [
                "Online",
                "Offline"
              ]
            },
            "connectionType": {
              "description": "W - Wifi, M - mobile data, L - LAN/WAN",
              "type": "string",
              "enum": [
                "W",
                "M",
                "L"
              ]
            },
            "device": {
              "description": "Type of device, D - Desktop, M - Mobile, T - Tablet",
              "type": "string",
              "enum": [
                "D",
                "M",
                "T"
              ]
            },
            "deviceOS": {
              "description": "Type of Operating system on the device, W for Windows, A for Android, L for Linux, M for Mac, I for ios",
              "type": "string",
              "enum": [
                "W",
                "A",
                "L",
                "M",
                "I"
              ]
            },
            "name": {
              "type": "string"
            },
            "oSVersion": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "P",
                "M",
                "D"
              ]
            },
            "version": {
              "type": "string"
            }
          }
        },
        "verificationAttempts": {
          "description": "ID verification number of attempts (ex number of attempts done for Aadhaar)",
          "type": "integer"
        },
        "verificationDurationInSeconds": {
          "description": "ID verification duration (duration in seconds for ID verification)",
          "type": "integer"
        },
        "waitForVaccinationInMinutes": {
          "description": "Time between verification and vaccination (in minutes)",
          "type": "integer"
        }
      }
    },
    "CertificationRequestV2MetaVaccinationApp": {
      "type": "object",
      "properties": {
        "appMode": {
          "type": "string",
          "enum": [
            "Online",
            "Offline"
          ]
        },
        "connectionType": {
          "description": "W - Wifi, M - mobile data, L - LAN/WAN",
          "type": "string",
          "enum": [
            "W",
            "M",
            "L"
          ]
        },
        "device": {
          "description": "Type of device, D - Desktop, M - Mobile, T - Tablet",
          "type": "string",
          "enum": [
            "D",
            "M",
            "T"
          ]
        },
        "deviceOS": {
          "description": "Type of Operating system on the device, W for Windows, A for Android, L for Linux, M for Mac, I for ios",
          "type": "string",
          "enum": [
            "W",
            "A",
            "L",
            "M",
            "I"
          ]
        },
        "name": {
          "type": "string"
        },
        "oSVersion": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "P",
            "M",
            "D"
          ]
        },
        "version": {
          "type": "string"
        }
      }
    },
    "CertificationRequestV2Recipient": {
      "type": "object",
      "properties": {
        "address": {
          "type": "object",
          "properties": {
            "addressLine1": {
              "type": "string"
            },
            "addressLine2": {
              "type": "string"
            },
            "district": {
              "type": "string"
            },
            "pincode": {
              "type": "integer"
            },
            "state": {
              "type": "string"
            }
          }
        },
        "age": {
          "type": "string"
        },
        "contact": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dob": {
          "type": "string",
          "format": "date"
        },
        "gender": {
          "type": "string"
        },
        "identity": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "uhid": {
          "type": "string"
        }
      }
    },
    "CertificationRequestV2RecipientAddress": {
      "type": "object",
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "pincode": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "CertificationRequestV2Vaccination": {
      "type": "object",
      "properties": {
        "batch": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "dose": {
          "description": "Dose number for example 1 for first dose of 2 doses",
          "type": "number",
          "example": 1
        },
        "effectiveStart": {
          "type": "string",
          "format": "date"
        },
        "effectiveUntil": {
          "type": "string",
          "format": "date"
        },
        "manufacturer": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "totalDoses": {
          "description": "Total number of doses required for this vaccination.",
          "type": "number",
          "example": 2
        }
      }
    },
    "CertificationRequestV2Vaccinator": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CertificationRequestVaccination": {
      "type": "object",
      "properties": {
        "batch": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "dose": {
          "description": "Dose number for example 1 for first dose of 2 doses",
          "type": "number",
          "example": 1
        },
        "effectiveStart": {
          "type": "string",
          "format": "date"
        },
        "effectiveUntil": {
          "type": "string",
          "format": "date"
        },
        "manufacturer": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "totalDoses": {
          "description": "Total number of doses required for this vaccination.",
          "type": "number",
          "example": 2
        }
      }
    },
    "CertificationRequestVaccinator": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "extra": {
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "IdentityVerificationRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "properties": {
        "mobile": {
          "type": "string"
        },
        "token2fa": {
          "type": "string"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "PreEnrollment": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "dob": {
          "type": "string",
          "format": "date"
        },
        "email": {
          "type": "string"
        },
        "enrollmentScopeId": {
          "type": "string"
        },
        "gender": {
          "type": "string",
          "enum": [
            "Male",
            "Female",
            "Other"
          ]
        },
        "meta": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "nationalId": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "Program": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "logoURL": {
          "type": "string"
        },
        "medicines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProgramMedicinesItems0"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ProgramMedicinesItems0": {
      "type": "object",
      "title": "medicine",
      "properties": {
        "effectiveUntil": {
          "description": "Number of months the vaccination is effective",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "provider": {
          "type": "string"
        },
        "schedule": {
          "type": "object",
          "properties": {
            "repeatInterval": {
              "type": "integer"
            },
            "repeatTimes": {
              "type": "integer"
            }
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive",
            "Blocked"
          ]
        },
        "vaccinationMode": {
          "type": "string",
          "enum": [
            "muscular injection",
            "oral",
            "nasal"
          ]
        }
      }
    },
    "ProgramMedicinesItems0Schedule": {
      "type": "object",
      "properties": {
        "repeatInterval": {
          "type": "integer"
        },
        "repeatTimes": {
          "type": "integer"
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "sideEffectsResponse": {
      "description": "Indian address format",
      "type": "object",
      "title": "SideEffectsResponse",
      "required": [
        "symptom",
        "response"
      ],
      "properties": {
        "response": {
          "description": "response",
          "type": "string",
          "title": "response",
          "default": "",
          "$id": "#/properties/sideEffectsResponse/properties/response"
        },
        "symptom": {
          "description": "symptom",
          "type": "string",
          "title": "symptom",
          "default": "",
          "$id": "#/properties/sideEffectsResponse/properties/symptom"
        }
      },
      "$id": "#/properties/SideEffectsResponse",
      "examples": [
        {
          "response": "yes",
          "symptom": "rapid heartbeat"
        }
      ]
    },
    "signature": {
      "type": "object",
      "title": "The Signature Schema for the registry",
      "required": [
        "@type",
        "signatureFor",
        "creator",
        "created",
        "signatureValue"
      ],
      "properties": {
        "@type": {
          "type": "string",
          "default": "sc:RsaSignature2018",
          "enum": [
            "sc:LinkedDataSignature2015",
            "sc:GraphSignature2012",
            "sc:RsaSignature2018"
          ],
          "$id": "#/properties/@type"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "$comment": "Timestamp",
          "$id": "#/properties/created",
          "examples": [
            "2017-09-23T20:21:34Z"
          ]
        },
        "creator": {
          "type": "string",
          "format": "uri",
          "$comment": "IRI where the public key associated could be retrieved",
          "$id": "#/properties/creator",
          "examples": [
            "https://example.com/i/pat/keys/"
          ]
        },
        "nonce": {
          "type": "string",
          "$comment": "Some unique value for tracking",
          "$id": "#/properties/nonce",
          "examples": [
            "guid"
          ]
        },
        "signatureFor": {
          "type": "string",
          "$comment": "The attribute name or entity id you for which this is the signature",
          "$id": "#/properties/signatureFor",
          "examples": [
            "http://localhost:8080/serialNum",
            "http://localhost:8080/9cba6ddd-330c-4a0d-929a-771bb12cb0d3"
          ]
        },
        "signatureValue": {
          "type": "string",
          "$comment": "Hash or signed value",
          "$id": "#/properties/signatureValue",
          "examples": [
            "eyiOiJKJeXAasddOEjgFWFXk"
          ]
        }
      },
      "$id": "#/properties/Signature"
    },
    "vaccinator": {
      "type": "object",
      "title": "The Vaccinator Schema",
      "required": [
        "serialNum",
        "code",
        "nationalIdentifier",
        "name",
        "facilityIds",
        "mobileNumber",
        "status"
      ],
      "properties": {
        "___encryptedFields": {},
        "averageRating": {
          "type": "number"
        },
        "code": {
          "type": "string",
          "$comment": "Code",
          "$id": "#/properties/code"
        },
        "facilityIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "mobileNumber": {
          "type": "string",
          "maxLength": 10,
          "minLength": 10
        },
        "name": {
          "type": "string",
          "title": "Full name",
          "$id": "#/properties/name"
        },
        "nationalIdentifier": {
          "type": "string",
          "$comment": "Nationality",
          "$id": "#/properties/nationalIdentifier"
        },
        "serialNum": {
          "type": "integer",
          "$comment": "Serial number",
          "$id": "#/properties/serialNum"
        },
        "signatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/signature"
          },
          "$comment": "Placeholder for all verifiable claims",
          "$id": "#/properties/signatures"
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Inactive"
          ]
        },
        "trainingCertificate": {
          "type": "string"
        }
      },
      "$id": "#/properties/Vaccinator"
    }
  },
  "securityDefinitions": {
    "hasRole": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://divoc.xiv.in/keycloak/auth/realms/divoc/protocol/openid-connect/auth",
      "tokenUrl": "https://divoc.xiv.in/keycloak/auth/realms/divoc/protocol/openid-connect/token",
      "scopes": {
        "admin": "scope of super admin",
        "facility-admin": "scope of facility admin",
        "facility-staff": "scope of facility staff"
      }
    }
  },
  "security": [
    {
      "hasRole": [
        "facility-staff"
      ]
    }
  ]
}`))
}
