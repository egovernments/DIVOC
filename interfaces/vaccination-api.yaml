swagger: '2.0'
info:
  version: 1.0.0
  title: Divoc
  description: Digital infra for vaccination certificates
securityDefinitions:
  hasRole:
    type: oauth2
    flow: accessCode
    authorizationUrl: 'https://divoc.xiv.in/keycloak/auth/realms/divoc/protocol/openid-connect/auth'
    tokenUrl: 'https://divoc.xiv.in/keycloak/auth/realms/divoc/protocol/openid-connect/token'
    scopes:
      admin: scope of super admin
      facility-admin: scope of facility admin
      facility-staff: scope of facility staff
security:
  - hasRole: ['facility-staff']
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/authorize:
    post:
      tags:
        - login
      summary: Establish token
      consumes:
        - application/json
      produces:
        - application/json
      security: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LoginRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LoginResponse'
        '206':
          description: Need otp
        '401':
          description: Unauthorized

  /v1/divoc/configuration:
    get:
      tags:
        - configuration
      summary: Get Meta information about the application flow
      operationId: getConfiguration
      parameters:
        - name: lastKnownVersion
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApplicationConfiguration'
  /v1/users/me:
    get:
      tags:
        - vaccination
      summary: Get User information
      operationId: getLoggedInUserInfo
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserInfo'
  '/v1/preEnrollments/{preEnrollmentCode}':
    get:
      tags:
        - vaccination
      summary: Get pre enrollment information
      description: Get pre enrollment data from api for vaccination
      operationId: getPreEnrollment
      parameters:
        - name: preEnrollmentCode
          in: path
          required: true
          type: string
        - in: query
          name: limit
          type: number
        - in: query
          name: offset
          type: number
      responses:
        '200':
          description: OK
          schema:
            $ref: '../registry/Enrollment.json#/definitions/Enrollment'
  '/v1/preEnrollments':
    get:
      tags:
        - vaccination
      summary: Get all pre enrollments applicable to assigned facility
      operationId: getPreEnrollmentsForFacility
      parameters:
        - in: query
          name: limit
          type: number
        - in: query
          name: offset
          type: number
        - in: query
          name: date
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '../registry/Enrollment.json#/definitions/Enrollment'
  /v1/certify:
    post:
      tags:
        - certification
      summary: Certify the one or more vaccination
      description: >-
        Certification happens asynchronously, this requires vaccinator
        authorization and vaccinator should be trained for the vaccination that
        is being certified.
      operationId: certify
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CertificationRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
  /v3/certify:
    post:
      tags:
        - certification
      summary: Certify the one or more vaccination
      description: >-
        Certification happens asynchronously, this requires vaccinator
        authorization and vaccinator should be trained for the vaccination that
        is being certified. The payload for this API is compliant with DDCC core
        data set prescribed by WHO
      operationId: certifyV3
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CertificationRequestV2'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
  /v1/bulkCertify:
    post:
      tags:
        - certification
      summary: Upload certification csv for bulk ingestion
      description: certify all the data in uploaded csv
      operationId: bulkCertify
      security:
        - hasRole: ['facility-admin']
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          description: Certification data in the form of csv
      responses:
        '200':
          description: OK
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
  /v1/certify/uploads:
    get:
      tags:
        - certification
      summary: Get all file uploads for certification for given facility admin
      operationId: getCertifyUploads
      security:
        - hasRole: ['facility-admin']
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
  /v1/certify/uploads/{uploadId}/errors:
    get:
      tags:
        - certification
      summary: Get all the error rows associated with given uploadId
      operationId: getCertifyUploadErrors
      security:
        - hasRole: ['facility-admin']
      parameters:
        - name: uploadId
          in: path
          required: true
          type: integer
          description: Id of uploaded csv file
      responses:
        '200':
          description: OK
          schema:
            type: object
        '404':
          description: certify upload for given uploadID not found
        '403':
          description: Forbidden for user
  /v1/programs/current:
    get:
      tags:
        - configuration
      summary: Get active vaccination programs
      operationId: getCurrentPrograms
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Program'
  /v1/vaccinators:
    get:
      tags:
        - configuration
      summary: Get active vaccinators mapped for the facility
      operationId: getVaccinators
      parameters:
        - in: query
          name: limit
          type: number
        - in: query
          name: offset
          type: number
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: "../registry/Vaccinator.json#/definitions/Vaccinator"
  /v1/identity/verify:
    post:
      tags:
        - identity
      summary: Validate identity if the person
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/IdentityVerificationRequest'
      responses:
        '200':
          description: OK
        '206':
          description: Need OTP
  /v1/certificates:
    get:
      summary: Get certificate json
      security:
        - hasRole: ["recipient"]
      operationId: getCertificate
      responses:
        '200':
          description: OK
          schema:
            type: object
  /v1/certificates/{certificateId}:
    get:
      summary: Get certificate json for given certificateId
      tags:
        - certification
      security:
        - hasRole: ["facility-admin"]
      operationId: getCertificateByCertificateId
      parameters:
        - name: certificateId
          in: path
          required: true
          type: string
          description: Id of certificate
      responses:
        '200':
          description: OK
          schema:
            type: object
        '404':
          description: certificate for given certificateId not found
  /v1/sideEffects:
    get:
      tags:
        - sideEffects
      summary: Get Side Effects Metadata
      security: []
      operationId: getSideEffectsMetadata
      responses:
        '200':
          description: OK
          schema:
            type: object
  /v1/report-side-effects:
    post:
      tags:
        - reportSideEffects
      summary: Create reported side effects
      security:
        - hasRole: ["recipient"]
      operationId: createReportedSideEffects
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              certificateId:
                type: string
              sideEffectsResponse:
                type: array
                items:
                  $ref: '../registry/RecipientSideEffects.json#/definitions/SideEffectsResponse'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
  /v1/events:
    post:
      summary: Send events for monitoring / tracking purpose.
      operationId: events
      security: []
      parameters:
        - in: body
          name: body
          schema:
            type: array
            items:
              type: object
              $ref: '#/definitions/Event'
      responses:
        '200':
          description: OK
  /v1/ping:
    get:
      summary: Server heartbeat operation
      description: >-
        This operation shows how to override the global security defined above,
        as we want to open it up for all users.
      security: []
      responses:
        '200':
          description: OK
  /v1/certificate:
    put:
      tags:
        - certification
      summary: Update existing certificate request
      description: >-
        Update existing certificate if all checks are passed
      operationId: updateCertificate
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CertificationRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        '412':
          description: Update not allowed
          schema:
            $ref: '#/definitions/Error'
  /v3/certificate:
    put:
      tags:
        - certification
      summary: Update existing certificate request
      description: >-
        Update existing certificate if all checks are passed
      operationId: updateCertificateV3
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/CertificationRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        '412':
          description: Update not allowed
          schema:
            $ref: '#/definitions/Error'
  /v1/certificate/revoked:
    post:
      tags:
        - certificateRevoked
      summary: Check if given certificate is revoked
      operationId: certificateRevoked
      security: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
        '404':
          description: certificate not found in revocation list
        '400':
          description: Invalid input
  /v1/test/certify:
    post:
      tags:
        - certification
      summary: Certify the one or more vaccination
      description: >-
        Certification happens asynchronously, this requires vaccinator
        authorization.
      operationId: testCertify
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/TestCertificationRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
  /v1/test/bulkCertify:
    post:
      tags:
        - certification
      summary: Upload test certification csv for bulk ingestion
      description: certify all the data in uploaded csv
      operationId: testBulkCertify
      security:
        - hasRole: ['facility-admin']
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: file
          type: file
          description: Certification data in the form of csv
      responses:
        '200':
          description: OK
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized
  /v1/test/certify/uploads:
    get:
      tags:
        - certification
      summary: Get all file uploads for test certification for given facility admin
      operationId: getTestCertifyUploads
      security:
        - hasRole: ['facility-admin']
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
  /v1/test/certify/uploads/{uploadId}/errors:
    get:
      tags:
        - certification
      summary: Get all the error rows associated with given uploadId
      operationId: getTestCertifyUploadErrors
      security:
        - hasRole: ['facility-admin']
      parameters:
        - name: uploadId
          in: path
          required: true
          type: integer
          description: Id of uploaded csv file
      responses:
        '200':
          description: OK
          schema:
            type: object
        '404':
          description: test certify upload for given uploadID not found
        '403':
          description: Forbidden for user
definitions:
  LoginRequest:
    type: object
    properties:
      mobile:
        type: string
        format: "string"
      token2fa:
        type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
      refreshToken:
        type: string
  CertificationRequest:
    type: object
    properties:
      preEnrollmentCode:
        type: string
      enrollmentType:
        type: string
        minLength: 1
      programId:
        type: string
        minLength: 1
      comorbidities:
        type: array
        items:
          type: string
      recipient:
        type: object
        properties:
          name:
            type: string
            minLength: 1
          dob:
            type: string
            format: date
            x-nullable: true
          age:
            type: string
            minLength: 1
          gender:
            type: string
            minLength: 1
          nationality:
            type: string
            minLength: 1
          identity:
            type: string
            minLength: 1
          contact:
            type: array
            items:
              type: string
              minLength: 1
          address:
            type: object
            properties:
              addressLine1:
                type: string
              addressLine2:
                type: string
              district:
                type: string
                minLength: 1
              state:
                type: string
                minLength: 1
              country:
                type: string
                minLength: 2
              pincode:
                type: string
            required:
              - addressLine1
              - district
              - state
              - pincode
        required:
          - name
          - gender
          - nationality
          - identity
          - contact
          - address
          - enrollmentType
          - programId
      vaccination:
        type: object
        properties:
          name:
            type: string
          batch:
            type: string
          manufacturer:
            type: string
          date:
            type: string
            format: date
          effectiveStart:
            type: string
            format: date
          effectiveUntil:
            type: string
            format: date
          dose:
            type: number
            description: Dose number for example 1 for first dose of 2 doses
            minimum: 1
            example:
              1
          totalDoses:
            type: number
            description: Total number of doses required for this vaccination.
            minimum: 1
            example:
              2
        required:
          - name
          - manufacturer
          - date
          - effectiveStart
          - effectiveUntil
          - dose
          - totalDoses
      vaccinator:
        type: object
        properties:
          name:
            type: string
            minLength: 1
        required:
          - name
      facility:
        type: object
        properties:
          name:
            type: string
            minLength: 1
          address:
            type: object
            properties:
              addressLine1:
                type: string
              addressLine2:
                type: string
              district:
                type: string
                minLength: 1
              state:
                type: string
                minLength: 1
              country:
                type: string
                minLength: 2
              pincode:
                type: string
                minLength: 1
            required:
              - addressLine1
              - district
              - state
              - pincode
        required:
          - name
          - address
      meta:
        type: object
    required:
      - preEnrollmentCode
      - recipient
      - vaccination
      - vaccinator
      - facility
  CertificationRequestV2:
    type: object
    properties:
      preEnrollmentCode:
        type: string
      enrollmentType:
        type: string
        minLength: 1
      programId:
        type: string
        minLength: 1
      comorbidities:
        type: array
        items:
          type: string
      recipient:
        type: object
        properties:
          name:
            type: string
            minLength: 1
          dob:
            type: string
            format: date
            x-nullable: true
          age:
            type: string
            minLength: 1
          gender:
            type: string
            minLength: 1
          nationality:
            type: string
            minLength: 1
          identity:
            type: string
            minLength: 1
          contact:
            type: array
            items:
              type: string
              minLength: 1
          address:
            type: object
            properties:
              addressLine1:
                type: string
              addressLine2:
                type: string
              district:
                type: string
                minLength: 1
              state:
                type: string
                minLength: 1
              country:
                type: string
                minLength: 2
              pincode:
                type: string
            required:
              - addressLine1
              - district
              - state
              - pincode
        required:
          - name
          - nationality
          - identity
          - contact
      vaccination:
        type: object
        properties:
          name:
            type: string
          batch:
            type: string
          manufacturer:
            type: string
          date:
            type: string
            format: date
          effectiveStart:
            type: string
            format: date
          effectiveUntil:
            type: string
            format: date
          dose:
            type: number
            description: Dose number for example 1 for first dose of 2 doses
            minimum: 1
            example:
              1
          totalDoses:
            type: number
            description: Total number of doses required for this vaccination.
            minimum: 1
            example:
              2
        required:
          - name
          - manufacturer
          - date
          - effectiveStart
          - effectiveUntil
          - dose
          - totalDoses
      vaccinator:
        type: object
        properties:
          name:
            type: string
            minLength: 1
        required:
          - name
      facility:
        type: object
        properties:
          name:
            type: string
            minLength: 1
          address:
            type: object
            properties:
              addressLine1:
                type: string
              addressLine2:
                type: string
              district:
                type: string
                minLength: 1
              state:
                type: string
                minLength: 1
              country:
                type: string
                minLength: 2
              pincode:
                type: string
                minLength: 1
            required:
              - addressLine1
              - district
              - state
              - pincode
        required:
          - name
      meta:
        type: object
    required:
      - preEnrollmentCode
      - recipient
      - vaccination
      - facility
  TestCertificationRequest:
    type: object
    properties:
      preEnrollmentCode:
        type: string
      programId:
        type: string
        minLength: 1
      recipient:
        type: object
        properties:
          name:
            type: string
            minLength: 1
          dob:
            type: string
            format: date
            x-nullable: true
          gender:
            type: string
            minLength: 1
          nationality:
            type: string
            minLength: 1
          identity:
            type: string
            minLength: 1
          contact:
            type: array
            items:
              type: string
              minLength: 1
          address:
            type: object
            properties:
              addressLine1:
                type: string
              addressLine2:
                type: string
              district:
                type: string
                minLength: 1
              state:
                type: string
                minLength: 1
              country:
                type: string
                minLength: 2
              pincode:
                type: string
            required:
              - addressLine1
              - district
              - state
              - pincode
        required:
          - name
          - gender
          - dob
          - identity
          - contact
      testDetails:
        type: object
        properties:
          testName:
            type: string
          testType:
            type: string
          disease:
            type: string
          batch:
            type: string
          manufacturer:
            type: string
          sampleOrigin:
            type: string
          sampleCollectionTimestamp:
            type: string
            format: date-time
          resultTimestamp:
            type: string
            format: date-time
          result:
            type: string
            enum: ["Positive", "Negative", "Inconclusive", "Void"]
        required:
          - testType
          - disease
          - sampleCollectionTimestamp
          - resultTimestamp
          - result
      verifier:
        type: object
        properties:
          name:
            type: string
            minLength: 1
        required:
          - name
      facility:
        type: object
        properties:
          name:
            type: string
            minLength: 1
          address:
            type: object
            properties:
              addressLine1:
                type: string
              addressLine2:
                type: string
              district:
                type: string
                minLength: 1
              state:
                type: string
                minLength: 1
              country:
                type: string
                minLength: 2
              pincode:
                type: string
                minLength: 1
            required:
              - addressLine1
              - district
              - state
              - pincode
        required:
          - name
          - address
      meta:
        type: object
    required:
      - preEnrollmentCode
      - recipient
      - testDetails
      - facility
  Program:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      logoURL:
        type: string
      medicines:
        type: array
        items:
          type: object
          title: "medicine"
          properties:
            name:
              type: string
            provider:
              type: string
            vaccinationMode:
              type: string
              enum: ["muscular injection", "oral", "nasal"]
            doseIntervals:
              type: array
              items:
                type: object
                properties:
                  min:
                    type: integer
                  max:
                    type: integer
            effectiveUntil:
              type: integer
              description: Number of days the vaccination is effective after last dose
            status:
              type: string
              enum: ["Active", "Inactive", "Blocked"]
            price:
              type: number
  IdentityVerificationRequest:
    type: object
    properties:
      id:
        type: string
      token:
        type: string
  ApplicationConfiguration:
    type: object
    properties:
      navigation:
        type: object
      validation:
        type: object
      styles:
        type: object
  UserInfo:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      mobile:
        type: string
      roles:
        type: array
        items:
          type: string
  Event:
    type: object
    properties:
      date:
        type: string
        format: 'date-time'
      type:
        type: string
      extra:
        type: object
  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
    required:
      - code
      - message
host: divoc.xiv.in
schemes:
  - https
basePath: /divoc/api
